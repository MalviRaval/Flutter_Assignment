21. What is inheritance?
Ans : One class is acquire property and behavior of another class or parent class is called as inheritance.
we can make used by extend keyword.


22. Which inheritance is not supported by Dart? Why? B3. What is advantage of inheritance?
Multiple inheritance is not supported by Dart
There are several advantage of inheritance
1) Reusability of code
2) Reliability
3) Better to Understand easily
4) Saving time and effort


23. Difference between inheritance and encapsulation. B5. Difference between inheritance and abstraction.
    Inheritance means acquire properties and behaviour of another class is called inheritance.
    There are five type of inheritance.
    1) Single Inheritance
    2) Multiple Inheritance
    3) Multilevel Inheritance
    4) Hybrid Inheritance
    5) Hierarchical Inheritance

    Encapsulation means binding or wrapping of data and member together into a single unit.
    Encapsulation is also helps in data hiding. where object kept private from outside of the world.
    Encapsulation is implemented through access modifier.
    Real world ex is car engine encapsulate the internal working you interact with it through the carâ€™s controls without accessing the engine directly.


    whereas in Abstraction is process in which we only show essential functionality to the user.
    Abstraction is achieved by abstract class and interface.
    Abstraction is implemented through abstract class and interface.
    Real world ex is when you drive a car you don't need to know about engine


24. Difference between inheritance and polymorphism

     Inheritance : Child class inherits properties of parent class.
     its is follow IS-A relation between classes
     Multiple (But it is support multiple interface) and hybrid inheritance is not supported in inheritance
     its is use extend keyword.


     Polymorphism: Poly means more morph means form.
     Polymorphism has two type : compile time polymorphism and run time polymorphism
     Polymorphism has two method : Method overloading and Method Overriding
     In Dart not allow method overloading because of var variable and optional parameter.




25. Can we override static method in Dart?
    No, We can't override static method because static methods belongs to the class itself rather than instance of class.

26. Can we overload static method in Dart?
    No, We can't overload static method. Dart doesn't provide method overloading.

27. Can a class implement more than one interface?
    Yes, More then one implements method in class


B10. Can a class extend more than one class in Dart?
      No we extend only one parent class in dart. Because dart doesn't support method overloading

28. Can an interface extend more than one interface in Dart?


29. What will happen if a class implements two interfaces and they both have a method with same name and signature?
    Interface solve the problem of method Overloading. if there will be happen this kind of issue then take common method for a one time.


    class A{
       void a1(){}
       void b1(int a){}
    }
    class B{
       void a1(){}
       void b1(int a){}
    }

    class c implements A{
      @override
      void a1() {
        // TODO: implement a1
      }

      @override
      void b1(int a) {
        // TODO: implement b1
      }


    }


30. Can we pass an object of a subclass to a method expecting an object of the super class?

 abstract class Vehicle {}

 class Car extends Vehicle {}

 class Bike extends Vehicle {}

 class Garage {
   void repair(Vehicle vehicle) {}
 }

 void main() {
   Garage g = new Garage();
   Vehicle c = new Car();
   Vehicle b = new Bike();
   g.repair(c);
   g.repair(b);
 }


 B14. Are static members inherited to sub classes?
      No. Static method and member are not inherited by subclass.



31. What happens if the parent and the child class have a field with same identifier?
Yes, it is possible to have same data member in Parent and Child classes.
class A {
  String str = "We are in Parent class";
}

class B extends A {
  String str =   "We are in Child class";
}

void main() {
  A a = A();
  print("Base class reference can access only base class member ${a.str}");

  B b = B();

  print("Derived class reference can access both ${b.str}");
}



B16. Are constructors and initializers also inherited to sub classes?



32. How do you restrict a member of a class from inheriting by its sub classes?

33. How do you implement multiple inheritance in Dart?
34. Can a class extend by itself in Dart?
35. How do you override a private method in Dart?
36. When to overload a method in Dart and when to override it?
37. What the order is of extends and implements keyword on Dart class declaration?
38. How do you prevent overriding a Dart method without using the final modifier?
39. What are the rules of method overriding in Dart?
40. Difference between method overriding and overloading in Dart.
41. What happens when a class implements two interfaces and both declare field (variable) with same name?
42. Can a subclass instance method override a superclass static method?
43. Can a subclass static method hide superclass instance method?
44. Can a superclass access subclass member?
45. Difference between object oriented and object based language.
46. Create a program using List
47. Create a program using Set
48. Create a program using Map